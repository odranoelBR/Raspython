Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    IMPRIMA
    CHAVEDIREITA
    NUMERO
    COLUNA
    VALOR
    CHAVEESQUERDA

Grammar

Rule 0     S' -> assign
Rule 1     assign -> FRENTE
Rule 2     assign -> DIREITA
Rule 3     assign -> ESQUERDA
Rule 4     assign -> VOLTA
Rule 5     assign -> SE expressao blocoExecutar
Rule 6     assign -> SE expressao blocoExecutar SENAO blocoExecutar
Rule 7     assign -> ENQUANTO expressao FACA blocoExecutar
Rule 8     expressao -> COLUNAESQUERDA VERDADEIRO COLUNADIREITA
Rule 9     expressao -> COLUNAESQUERDA FALSO COLUNADIREITA
Rule 10    expressao -> COLUNAESQUERDA SENSORFRENTE COLUNADIREITA
Rule 11    blocoExecutar -> DIREITA
Rule 12    blocoExecutar -> FRENTE
Rule 13    blocoExecutar -> ESQUERDA
Rule 14    blocoExecutar -> VOLTA

Terminals, with rules where they appear

CHAVEDIREITA         : 
CHAVEESQUERDA        : 
COLUNA               : 
COLUNADIREITA        : 8 9 10
COLUNAESQUERDA       : 8 9 10
DIREITA              : 2 11
ENQUANTO             : 7
ESQUERDA             : 3 13
FACA                 : 7
FALSO                : 9
FRENTE               : 1 12
IMPRIMA              : 
NUMERO               : 
SE                   : 5 6
SENAO                : 6
SENSORFRENTE         : 10
VALOR                : 
VERDADEIRO           : 8
VOLTA                : 4 14
error                : 

Nonterminals, with rules where they appear

assign               : 0
blocoExecutar        : 5 6 6 7
expressao            : 5 6 7

Parsing method: LALR

state 0

    (0) S' -> . assign
    (1) assign -> . FRENTE
    (2) assign -> . DIREITA
    (3) assign -> . ESQUERDA
    (4) assign -> . VOLTA
    (5) assign -> . SE expressao blocoExecutar
    (6) assign -> . SE expressao blocoExecutar SENAO blocoExecutar
    (7) assign -> . ENQUANTO expressao FACA blocoExecutar

    FRENTE          shift and go to state 2
    DIREITA         shift and go to state 3
    ESQUERDA        shift and go to state 7
    VOLTA           shift and go to state 5
    SE              shift and go to state 4
    ENQUANTO        shift and go to state 1

    assign                         shift and go to state 6

state 1

    (7) assign -> ENQUANTO . expressao FACA blocoExecutar
    (8) expressao -> . COLUNAESQUERDA VERDADEIRO COLUNADIREITA
    (9) expressao -> . COLUNAESQUERDA FALSO COLUNADIREITA
    (10) expressao -> . COLUNAESQUERDA SENSORFRENTE COLUNADIREITA

    COLUNAESQUERDA  shift and go to state 9

    expressao                      shift and go to state 8

state 2

    (1) assign -> FRENTE .

    $end            reduce using rule 1 (assign -> FRENTE .)


state 3

    (2) assign -> DIREITA .

    $end            reduce using rule 2 (assign -> DIREITA .)


state 4

    (5) assign -> SE . expressao blocoExecutar
    (6) assign -> SE . expressao blocoExecutar SENAO blocoExecutar
    (8) expressao -> . COLUNAESQUERDA VERDADEIRO COLUNADIREITA
    (9) expressao -> . COLUNAESQUERDA FALSO COLUNADIREITA
    (10) expressao -> . COLUNAESQUERDA SENSORFRENTE COLUNADIREITA

    COLUNAESQUERDA  shift and go to state 9

    expressao                      shift and go to state 10

state 5

    (4) assign -> VOLTA .

    $end            reduce using rule 4 (assign -> VOLTA .)


state 6

    (0) S' -> assign .



state 7

    (3) assign -> ESQUERDA .

    $end            reduce using rule 3 (assign -> ESQUERDA .)


state 8

    (7) assign -> ENQUANTO expressao . FACA blocoExecutar

    FACA            shift and go to state 11


state 9

    (8) expressao -> COLUNAESQUERDA . VERDADEIRO COLUNADIREITA
    (9) expressao -> COLUNAESQUERDA . FALSO COLUNADIREITA
    (10) expressao -> COLUNAESQUERDA . SENSORFRENTE COLUNADIREITA

    VERDADEIRO      shift and go to state 13
    FALSO           shift and go to state 14
    SENSORFRENTE    shift and go to state 12


state 10

    (5) assign -> SE expressao . blocoExecutar
    (6) assign -> SE expressao . blocoExecutar SENAO blocoExecutar
    (11) blocoExecutar -> . DIREITA
    (12) blocoExecutar -> . FRENTE
    (13) blocoExecutar -> . ESQUERDA
    (14) blocoExecutar -> . VOLTA

    DIREITA         shift and go to state 19
    FRENTE          shift and go to state 15
    ESQUERDA        shift and go to state 17
    VOLTA           shift and go to state 18

    blocoExecutar                  shift and go to state 16

state 11

    (7) assign -> ENQUANTO expressao FACA . blocoExecutar
    (11) blocoExecutar -> . DIREITA
    (12) blocoExecutar -> . FRENTE
    (13) blocoExecutar -> . ESQUERDA
    (14) blocoExecutar -> . VOLTA

    DIREITA         shift and go to state 19
    FRENTE          shift and go to state 15
    ESQUERDA        shift and go to state 17
    VOLTA           shift and go to state 18

    blocoExecutar                  shift and go to state 20

state 12

    (10) expressao -> COLUNAESQUERDA SENSORFRENTE . COLUNADIREITA

    COLUNADIREITA   shift and go to state 21


state 13

    (8) expressao -> COLUNAESQUERDA VERDADEIRO . COLUNADIREITA

    COLUNADIREITA   shift and go to state 22


state 14

    (9) expressao -> COLUNAESQUERDA FALSO . COLUNADIREITA

    COLUNADIREITA   shift and go to state 23


state 15

    (12) blocoExecutar -> FRENTE .

    $end            reduce using rule 12 (blocoExecutar -> FRENTE .)
    SENAO           reduce using rule 12 (blocoExecutar -> FRENTE .)


state 16

    (5) assign -> SE expressao blocoExecutar .
    (6) assign -> SE expressao blocoExecutar . SENAO blocoExecutar

    $end            reduce using rule 5 (assign -> SE expressao blocoExecutar .)
    SENAO           shift and go to state 24


state 17

    (13) blocoExecutar -> ESQUERDA .

    $end            reduce using rule 13 (blocoExecutar -> ESQUERDA .)
    SENAO           reduce using rule 13 (blocoExecutar -> ESQUERDA .)


state 18

    (14) blocoExecutar -> VOLTA .

    $end            reduce using rule 14 (blocoExecutar -> VOLTA .)
    SENAO           reduce using rule 14 (blocoExecutar -> VOLTA .)


state 19

    (11) blocoExecutar -> DIREITA .

    $end            reduce using rule 11 (blocoExecutar -> DIREITA .)
    SENAO           reduce using rule 11 (blocoExecutar -> DIREITA .)


state 20

    (7) assign -> ENQUANTO expressao FACA blocoExecutar .

    $end            reduce using rule 7 (assign -> ENQUANTO expressao FACA blocoExecutar .)


state 21

    (10) expressao -> COLUNAESQUERDA SENSORFRENTE COLUNADIREITA .

    DIREITA         reduce using rule 10 (expressao -> COLUNAESQUERDA SENSORFRENTE COLUNADIREITA .)
    FRENTE          reduce using rule 10 (expressao -> COLUNAESQUERDA SENSORFRENTE COLUNADIREITA .)
    ESQUERDA        reduce using rule 10 (expressao -> COLUNAESQUERDA SENSORFRENTE COLUNADIREITA .)
    VOLTA           reduce using rule 10 (expressao -> COLUNAESQUERDA SENSORFRENTE COLUNADIREITA .)
    FACA            reduce using rule 10 (expressao -> COLUNAESQUERDA SENSORFRENTE COLUNADIREITA .)


state 22

    (8) expressao -> COLUNAESQUERDA VERDADEIRO COLUNADIREITA .

    DIREITA         reduce using rule 8 (expressao -> COLUNAESQUERDA VERDADEIRO COLUNADIREITA .)
    FRENTE          reduce using rule 8 (expressao -> COLUNAESQUERDA VERDADEIRO COLUNADIREITA .)
    ESQUERDA        reduce using rule 8 (expressao -> COLUNAESQUERDA VERDADEIRO COLUNADIREITA .)
    VOLTA           reduce using rule 8 (expressao -> COLUNAESQUERDA VERDADEIRO COLUNADIREITA .)
    FACA            reduce using rule 8 (expressao -> COLUNAESQUERDA VERDADEIRO COLUNADIREITA .)


state 23

    (9) expressao -> COLUNAESQUERDA FALSO COLUNADIREITA .

    DIREITA         reduce using rule 9 (expressao -> COLUNAESQUERDA FALSO COLUNADIREITA .)
    FRENTE          reduce using rule 9 (expressao -> COLUNAESQUERDA FALSO COLUNADIREITA .)
    ESQUERDA        reduce using rule 9 (expressao -> COLUNAESQUERDA FALSO COLUNADIREITA .)
    VOLTA           reduce using rule 9 (expressao -> COLUNAESQUERDA FALSO COLUNADIREITA .)
    FACA            reduce using rule 9 (expressao -> COLUNAESQUERDA FALSO COLUNADIREITA .)


state 24

    (6) assign -> SE expressao blocoExecutar SENAO . blocoExecutar
    (11) blocoExecutar -> . DIREITA
    (12) blocoExecutar -> . FRENTE
    (13) blocoExecutar -> . ESQUERDA
    (14) blocoExecutar -> . VOLTA

    DIREITA         shift and go to state 19
    FRENTE          shift and go to state 15
    ESQUERDA        shift and go to state 17
    VOLTA           shift and go to state 18

    blocoExecutar                  shift and go to state 25

state 25

    (6) assign -> SE expressao blocoExecutar SENAO blocoExecutar .

    $end            reduce using rule 6 (assign -> SE expressao blocoExecutar SENAO blocoExecutar .)

